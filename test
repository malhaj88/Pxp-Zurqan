[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m ************Initialized Been with cusotm scopes*******
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m Get Configuration folder name
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m Folder Name Founded in application.properties with value: config
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m End load yml files
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m Load yaml files from config folder: 
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m Load Yaml Resource file [/Users/Malzurqan/Documents/work/GitHub_Projects/Automation/Automation-POC/target/test-classes/config/drivers.yml]
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m End load yml files
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m Load properties files from /config folder: 
[36mc.a.a.s.i.AspireSpringInitializer       [0;39m [2m:[0;39m End load yml files
[36ma.a.p.AspireAutomationPocApplicationTest[0;39m [2m:[0;39m No active profile set, falling back to default profiles: default
[36mo.s.w.c.s.GenericWebApplicationContext  [0;39m [2m:[0;39m Refreshing org.springframework.web.context.support.GenericWebApplicationContext@263bbfeb: startup date [Sun Oct 15 08:34:37 EEST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13
[36mo.s.b.f.s.DefaultListableBeanFactory    [0;39m [2m:[0;39m Overriding bean definition for bean 'singleReturnValueHandler' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=io.jmnarloch.spring.boot.rxjava.config.RxJavaMvcAutoConfiguration; factoryMethodName=singleReturnValueHandler; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [io/jmnarloch/spring/boot/rxjava/config/RxJavaMvcAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.rx.RxJavaAutoConfiguration$RxJavaReturnValueHandlerConfig; factoryMethodName=singleReturnValueHandler; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/rx/RxJavaAutoConfiguration$RxJavaReturnValueHandlerConfig.class]]
[36mo.s.cloud.context.scope.GenericScope    [0;39m [2m:[0;39m BeanFactory id=bf8afe28-8d86-3f32-9bf5-47226c6d9324
[36mf.a.AutowiredAnnotationBeanPostProcessor[0;39m [2m:[0;39m JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[36mtrationDelegate$BeanPostProcessorChecker[0;39m [2m:[0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bcf8efa4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[36mc.a.a.c.TestEventObservableConfiguration[0;39m [2m:[0;39m initialize Test Event Source.. to be merged
[36mc.a.a.c.TestEventObservableConfiguration[0;39m [2m:[0;39m Check registered List<TestEventObservable>: [com.aspire.automation.jbehave.events.LifecycleTestEventSource@224c7de4, com.aspire.automation.junitrunners.EventEmitter@36ad229b]
[36mc.a.a.c.TestEventObservableConfiguration[0;39m [2m:[0;39m initialize Test Event Source.. to be merged
[36mc.a.a.c.TestEventObservableConfiguration[0;39m [2m:[0;39m Check registered List<TestEventObservable>: [com.aspire.automation.jbehave.events.LifecycleTestEventSource@224c7de4, com.aspire.automation.junitrunners.EventEmitter@36ad229b]
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Start Screenshot Capture observable
[36mStepScreenShotImageObservableInitializer[0;39m [2m:[0;39m initialize StepScreenShotImage Source.. to be merged
[36mStepScreenShotImageObservableInitializer[0;39m [2m:[0;39m Check registered List<StepScreenShotImage>: [com.aspire.automation.aspect.ScreenshotAspect@7ac48f05, com.aspire.automation.beans.ScreenshotCapture@7af1d072]
[36mStepScreenShotImageObservableInitializer[0;39m [2m:[0;39m initialize StepScreenShotImage Source.. to be merged
[36mStepScreenShotImageObservableInitializer[0;39m [2m:[0;39m Check registered List<StepScreenShotImage>: [com.aspire.automation.aspect.ScreenshotAspect@7ac48f05, com.aspire.automation.beans.ScreenshotCapture@7af1d072]
[36mc.a.a.beans.ScreenShotFileSaver         [0;39m [2m:[0;39m Initializing bean to subscribe to Observable<StepScreenShotImage>
[36mw.ChromeWebDriverConfigurationProperties[0;39m [2m:[0;39m initializing Chrom Webdriver - default
[36mw.ChromeWebDriverConfigurationProperties[0;39m [2m:[0;39m ChromeWebDriverConfigurationProperties(name=chrome, enabled=false, remote=WebDriverRemoteConfigurationProperties(type=saucelab, url=https://omaraspire1:psaTpDqUXqS7py41dYjT@hub-cloud.browserstack.com/wd/hub, enabled=false), mobile=false, local=WebDriverLocalConfigurationProperties(securityTest=false, proxy=WebDriverLocalProxyConfigurationProperties(enabled=false, proxyHost=10.200.150.14, port=8080)), capabilities={browser=chrome, browser_version=58.0, os=OS X, os_version=Sierra, project=WEB ASPIRE TEMPLATE TEST, acceptSslCerts=true, browserstack.debug=true}, preferences={profile.default_content_settings.popups=0, profile.default_content_setting_values.notifications=2, download.default_directory=/Users/malzurqan/Documents/Temp}, arguments=[start-maximized, disable-popup-blocking, test-type, --disable-extensions], localPath=LocalChromeWebdriverPathConfiguration(macLocation=/chrome/mac/chromedriver, winLocation=/chrome/win/chromedriver.exe, linuxLocation=/chrome/linux/chromedriver, systemName=webdriver.chrome.driver, mainFolderName=webdrivers))
[36mc.a.a.w.DefaultFirefoxWebDriverFactory  [0;39m [2m:[0;39m Local driver will be used FirefoxWebDriverConfigurationProperties(name=firefox, enabled=true, remote=WebDriverRemoteConfigurationProperties(type=saucelab, url=https://omaraspire1:psaTpDqUXqS7py41dYjT@hub-cloud.browserstack.com/wd/hub, enabled=false), mobile=false, local=WebDriverLocalConfigurationProperties(securityTest=false, proxy=WebDriverLocalProxyConfigurationProperties(enabled=false, proxyHost=10.200.150.14, port=8080)), capabilities={browser=firefox, browser_version=53.0, os=OS X, os_version=El Capitan, project=WEB ASPIRE TEMPLATE TEST, acceptSslCerts=true, browserstack.debug=true}, preferences={profile.default_content_settings.popups=0, profile.default_content_setting_values.notifications=2}, arguments=[start-maximized, disable-popup-blocking, test-type, --disable-extensions], localPath=LocalFireFoxWebdriverPathConfiguration(macLocation=/firefox/mac/geckodriver, winLocation=/firefox/win/geckodriver.exe, linuxLocation=/firefox/linux/geckodriver, systemName=webdriver.gecko.driver, mainFolderName=webdrivers))
[36mc.a.a.w.DefaultFirefoxWebDriverFactory  [0;39m [2m:[0;39m Driver Location: webdriver.gecko.driver:/Users/Malzurqan/Documents/work/GitHub_Projects/Automation/Automation-POC/src/main/resources/webdrivers/firefox/mac/geckodriver
[36mc.a.p.c.CustomStoriesPathInitializer    [0;39m [2m:[0;39m AspireAutomationPocApplicationTest.init()
[36mo.s.c.n.a.ArchaiusAutoConfiguration     [0;39m [2m:[0;39m No spring.application.name found, defaulting to 'application'
[36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[36ms.w.s.m.m.a.RequestMappingHandlerAdapter[0;39m [2m:[0;39m Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@263bbfeb: startup date [Sun Oct 15 08:34:37 EEST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13
[36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[36ms.w.s.m.m.a.RequestMappingHandlerMapping[0;39m [2m:[0;39m Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[36mo.s.w.s.handler.SimpleUrlHandlerMapping [0;39m [2m:[0;39m Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[36mo.s.ui.freemarker.SpringTemplateLoader  [0;39m [2m:[0;39m SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@263bbfeb: startup date [Sun Oct 15 08:34:37 EEST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13] and template loader path [classpath:/templates/]
[36mo.s.w.s.v.f.FreeMarkerConfigurer        [0;39m [2m:[0;39m ClassTemplateLoader for Spring macros added to FreeMarker configuration
[36mo.s.b.a.f.FreeMarkerAutoConfiguration   [0;39m [2m:[0;39m Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
[36mw.ChromeWebDriverConfigurationProperties[0;39m [2m:[0;39m initializing Chrom Webdriver - default
[36mw.ChromeWebDriverConfigurationProperties[0;39m [2m:[0;39m ChromeWebDriverConfigurationProperties(name=chrome, enabled=false, remote=WebDriverRemoteConfigurationProperties(type=saucelab, url=https://omaraspire1:psaTpDqUXqS7py41dYjT@hub-cloud.browserstack.com/wd/hub, enabled=false), mobile=false, local=WebDriverLocalConfigurationProperties(securityTest=false, proxy=WebDriverLocalProxyConfigurationProperties(enabled=false, proxyHost=10.200.150.14, port=8080)), capabilities={browser=chrome, browser_version=58.0, os=OS X, os_version=Sierra, project=WEB ASPIRE TEMPLATE TEST, acceptSslCerts=true, browserstack.debug=true}, preferences={profile.default_content_settings.popups=0, profile.default_content_setting_values.notifications=2, download.default_directory=/Users/malzurqan/Documents/Temp}, arguments=[start-maximized, disable-popup-blocking, test-type, --disable-extensions], localPath=LocalChromeWebdriverPathConfiguration(macLocation=/chrome/mac/chromedriver, winLocation=/chrome/win/chromedriver.exe, linuxLocation=/chrome/linux/chromedriver, systemName=webdriver.chrome.driver, mainFolderName=webdrivers))
[36ma.a.p.AspireAutomationPocApplicationTest[0;39m [2m:[0;39m Started AspireAutomationPocApplicationTest in 5.577 seconds (JVM running for 6.238)
[36mc.a.a.j.AspireDefaultTestRunner         [0;39m [2m:[0;39m Starting Aspire Test Run .. with Webdriver enabled
[36mc.a.a.j.AspireDefaultTestRunner         [0;39m [2m:[0;39m Currently Test will run firefox Webdriver
[36mc.a.a.j.c.StoriesPathInitializer        [0;39m [2m:[0;39m getInclude: stories/scopes/**.story
[36mc.a.a.jbehave.JbehaveDefaultTestRunner  [0;39m [2m:[0;39m Skipped Scenario ( 8 test run scope ) from story [ scope2.story ]
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SkipedScenariosEvent(stories=[Story(name=scope2.story, scenarios=[Scenario(title=8 test run scope, steps=[Then check story value equal to default value, Then check that run variable is equal to 2])])])
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SkipedScenariosEvent(stories=[Story(name=scope2.story, scenarios=[Scenario(title=8 test run scope, steps=[Then check story value equal to default value, Then check that run variable is equal to 2])])])
[36mc.a.a.j.c.StoriesPathInitializer        [0;39m [2m:[0;39m getInclude: stories/scopes/**.story
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStoryEvent(storyData=StoryData(name=BeforeStories, iD=BeforeStories))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStoryEvent(storyData=StoryData(name=BeforeStories, iD=BeforeStories))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStoryEvent(storyData=StoryData(name=BeforeStories, iD=BeforeStories))
[36mc.a.a.jbehave.StoryScopeFlusher         [0;39m [2m:[0;39m Clear Story Scop Object
[36mc.a.a.jbehave.ThreadScopeFlusher        [0;39m [2m:[0;39m Clear Thread scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStoryEvent(storyData=StoryData(name=BeforeStories, iD=BeforeStories))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStoryEvent(storyData=StoryData(name=scope.story, iD=scope.story))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStoryEvent(storyData=StoryData(name=scope.story, iD=scope.story))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.aspect.ScreenshotAspect  [0;39m [2m:[0;39m Take screen Shot before
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.aspect.ScreenshotAspect  [0;39m [2m:[0;39m Screenshot emit from asptect
[36mc.a.automation.aspect.TestEventAspect   [0;39m [2m:[0;39m Method returning Object of Type TestEvent...Stream returning value
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers StepReportEvent(data=CPU Usage is 90%!!!)
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: StepReportEvent(data=CPU Usage is 90%!!!)
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.aspect.ScreenshotAspect  [0;39m [2m:[0;39m Screenshot emit from asptect
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-0-0, name=Given a step variable x with value 1, formatedName=Given a step variable x with value 1, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-0-1, name=Then check step value equal to default value, formatedName=Then check step value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope.story-0, name=1 test step scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeExampleEvent(exampleData=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeExampleEvent(exampleData=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 1, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mcom.aspire.poc.steps.ScopeTest          [0;39m [2m:[0;39m Just for test .. rerun 0
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 2, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterExampleEvent(exampleData=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterExampleEvent(exampleData=ExampleData(seq=0, iD=scope.story-1-0, exampleRow={value=1, result=2}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeExampleEvent(exampleData=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeExampleEvent(exampleData=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=0, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mcom.aspire.poc.steps.ScopeTest          [0;39m [2m:[0;39m Just for test .. rerun 0
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Increment number of re run for the scenario, current, numberOfRerun = 0,1
[36mc.a.a.j.events.LifecycleTestEventSource [0;39m [2m:[0;39m Restarted: Then check that scenario variable is equal to ｟4｠
[36mc.a.a.j.events.LifecycleTestEventSource [0;39m [2m:[0;39m cause: 

org.jbehave.core.failures.RestartingScenarioFailure: Re Run Scenario/Example#1
	at com.aspire.automation.aspect.ReRunFailedScenarios.handleReRun(ReRunFailedScenarios.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.aspire.automation.aspect.SoftAssertAspect.softAssertMethod(SoftAssertAspect.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.aspire.poc.steps.ScopeTest$$EnhancerBySpringCGLIB$$c0b74bc.checkScenario(<generated>)
	at com.aspire.poc.steps.ScopeTest$$FastClassBySpringCGLIB$$1d107ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.aspire.poc.steps.ScopeTest$$EnhancerBySpringCGLIB$$5f2a9839.checkScenario(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
	at org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1090)
	at org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:955)
	at org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1029)
	at org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:899)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)
	at org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)
	at org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event FailedStepButWillRestartScenarioEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers FailedStepButWillRestartScenarioEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false), reRunCount=1, cause=null)
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: FailedStepButWillRestartScenarioEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false), reRunCount=1, cause=null)
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-1-0, name=Given a scenario variable x with value <value>, formatedName=Given a scenario variable x with value 3, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-1-1, name=Then increment scenario variable, formatedName=Then increment scenario variable, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=false))
[36mc.a.automation.aspect.SoftAssertAspect  [0;39m [2m:[0;39m Do A soft Assert
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mcom.aspire.poc.steps.ScopeTest          [0;39m [2m:[0;39m Just for test .. rerun 0
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event FailedStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers FailedStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=true), cause=java.lang.IllegalArgumentException: Just for test)
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: FailedStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=true), cause=java.lang.IllegalArgumentException: Just for test)
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=true))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-1-2, name=Then check that scenario variable is equal to <result>, formatedName=Then check that scenario variable is equal to 4, scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true), errorOccured=true))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterExampleEvent(exampleData=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterExampleEvent(exampleData=ExampleData(seq=1, iD=scope.story-1-1, exampleRow={value=3, result=4}, scenario=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), reRunCount=1, examlpeDataExist=true))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=1, iD=scope.story-1, name=2 test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-2-0, name=Given Display scenario value, formatedName=Given Display scenario value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-2-1, name=Then check scenario value equal to default value, formatedName=Then check scenario value equal to default value, scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=2, iD=scope.story-2, name=3 continue test scenario scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-3-0, name=Given a story variable x with value 1, formatedName=Given a story variable x with value 1, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-3-1, name=Then increment story variable, formatedName=Then increment story variable, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-3-2, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=3, iD=scope.story-3, name=4  test Story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-4-0, name=Given Display story value, formatedName=Given Display story value, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-4-1, name=Then check that story variable is equal to 2, formatedName=Then check that story variable is equal to 2, scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=4, iD=scope.story-4, name=5 continue test story scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope.story-5-0, name=Given a run variable x with value 1, formatedName=Given a run variable x with value 1, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope.story-5-1, name=Then increment run variable, formatedName=Then increment run variable, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=2, iD=scope.story-5-2, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=5, iD=scope.story-5, name=6 test run scope, storyData=StoryData(name=scope.story, iD=scope.story), reRunCount=0))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStoryEvent(storyData=StoryData(name=scope.story, iD=scope.story))
[36mc.a.a.jbehave.StoryScopeFlusher         [0;39m [2m:[0;39m Clear Story Scop Object
[36mc.aspire.automation.web.AspireWebDriver [0;39m [2m:[0;39m before destory is called..time to quit driver
[36mc.aspire.automation.web.AspireWebDriver [0;39m [2m:[0;39m Closing web driver
[36mc.a.a.jbehave.ThreadScopeFlusher        [0;39m [2m:[0;39m Clear Thread scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStoryEvent(storyData=StoryData(name=scope.story, iD=scope.story))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStoryEvent(storyData=StoryData(name=scope2.story, iD=scope2.story))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStoryEvent(storyData=StoryData(name=scope2.story, iD=scope2.story))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=0, iD=scope2.story-0-0, name=Then check story value equal to default value, formatedName=Then check story value equal to default value, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event BeforeStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event SuccessStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers SuccessStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: SuccessStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Need to screenshot for event AfterStepEvent
[36mc.a.a.beans.ScreenShotCaptureUtil       [0;39m [2m:[0;39m Web driver is null
[36mc.a.automation.beans.ScreenshotCapture  [0;39m [2m:[0;39m Screenshot emit: 
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.automation.jbehave.StepScopeFlusher [0;39m [2m:[0;39m Clear Step scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStepEvent(stepData=StepData(seq=1, iD=scope2.story-0-1, name=Then check that run variable is equal to 2, formatedName=Then check that run variable is equal to 2, scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0), exampledata=ExampleData(seq=0, iD=, exampleRow=null, scenario=null, reRunCount=0, examlpeDataExist=false), errorOccured=false))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0))
[36mc.a.a.jbehave.ExampleScopeFlusher       [0;39m [2m:[0;39m Clear Example Scopes
[36mc.a.a.jbehave.RestartScopeFlusher       [0;39m [2m:[0;39m Clear Restart Scopes
[36mc.a.a.jbehave.ScenarioScopeFlusher      [0;39m [2m:[0;39m Clear Scenario scope objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterScenarioEvent(scenarioData=ScenarioData(seq=0, iD=scope2.story-0, name=7 test run scope, storyData=StoryData(name=scope2.story, iD=scope2.story), reRunCount=0))
[36mc.a.a.aspect.ReRunFailedScenarios       [0;39m [2m:[0;39m Re Run : 1
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStoryEvent(storyData=StoryData(name=scope2.story, iD=scope2.story))
[36mc.a.a.jbehave.StoryScopeFlusher         [0;39m [2m:[0;39m Clear Story Scop Object
[36mc.aspire.automation.web.AspireWebDriver [0;39m [2m:[0;39m before destory is called..time to quit driver
[36mc.aspire.automation.web.AspireWebDriver [0;39m [2m:[0;39m Closing web driver
[36mc.a.a.jbehave.ThreadScopeFlusher        [0;39m [2m:[0;39m Clear Thread scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStoryEvent(storyData=StoryData(name=scope2.story, iD=scope2.story))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers BeforeStoryEvent(storyData=StoryData(name=AfterStories, iD=AfterStories))
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: BeforeStoryEvent(storyData=StoryData(name=AfterStories, iD=AfterStories))
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterAllStoriesEvent()
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterAllStoriesEvent()
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterStoryEvent(storyData=StoryData(name=AfterStories, iD=AfterStories))
[36mc.a.a.jbehave.StoryScopeFlusher         [0;39m [2m:[0;39m Clear Story Scop Object
[36mc.a.a.jbehave.ThreadScopeFlusher        [0;39m [2m:[0;39m Clear Thread scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterStoryEvent(storyData=StoryData(name=AfterStories, iD=AfterStories))
[36mc.a.a.j.AspireDefaultTestRunner         [0;39m [2m:[0;39m emit AfterWebdriverTypeEvent
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers AfterWebdriverTypeEvent()
[36mc.a.a.jbehave.WebDriverTypeScopeFlusher [0;39m [2m:[0;39m Clear Webdriver type Scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: AfterWebdriverTypeEvent()
[36mc.a.a.j.AspireDefaultTestRunner         [0;39m [2m:[0;39m emit RunEndEvent
[36mc.a.a.jbehave.AllScopesFlushHandler     [0;39m [2m:[0;39m Send TestEvent to flushers RunEndEvent()
[36mc.a.automation.jbehave.RunScopeFlusher  [0;39m [2m:[0;39m Clear Run scope Objects
[36mr.s.c.AspireReportingSpringConfiguration[0;39m [2m:[0;39m From Reporting: RunEndEvent()
[36mo.s.w.c.s.GenericWebApplicationContext  [0;39m [2m:[0;39m Closing org.springframework.web.context.support.GenericWebApplicationContext@263bbfeb: startup date [Sun Oct 15 08:34:37 EEST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@207ea13
